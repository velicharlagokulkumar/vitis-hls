// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="phase_optimizer_cordic_phase_optimizer_cordic,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.057000,HLS_SYN_LAT=25,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=703,HLS_SYN_LUT=2693,HLS_VERSION=2022_2}" *)

module phase_optimizer_cordic (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        outstream_TDATA,
        outstream_TVALID,
        outstream_TREADY,
        instream_TDATA,
        instream_TVALID,
        instream_TREADY
);

parameter    ap_ST_fsm_state1 = 26'd1;
parameter    ap_ST_fsm_state2 = 26'd2;
parameter    ap_ST_fsm_state3 = 26'd4;
parameter    ap_ST_fsm_state4 = 26'd8;
parameter    ap_ST_fsm_state5 = 26'd16;
parameter    ap_ST_fsm_state6 = 26'd32;
parameter    ap_ST_fsm_state7 = 26'd64;
parameter    ap_ST_fsm_state8 = 26'd128;
parameter    ap_ST_fsm_state9 = 26'd256;
parameter    ap_ST_fsm_state10 = 26'd512;
parameter    ap_ST_fsm_state11 = 26'd1024;
parameter    ap_ST_fsm_state12 = 26'd2048;
parameter    ap_ST_fsm_state13 = 26'd4096;
parameter    ap_ST_fsm_state14 = 26'd8192;
parameter    ap_ST_fsm_state15 = 26'd16384;
parameter    ap_ST_fsm_state16 = 26'd32768;
parameter    ap_ST_fsm_state17 = 26'd65536;
parameter    ap_ST_fsm_state18 = 26'd131072;
parameter    ap_ST_fsm_state19 = 26'd262144;
parameter    ap_ST_fsm_state20 = 26'd524288;
parameter    ap_ST_fsm_state21 = 26'd1048576;
parameter    ap_ST_fsm_state22 = 26'd2097152;
parameter    ap_ST_fsm_state23 = 26'd4194304;
parameter    ap_ST_fsm_state24 = 26'd8388608;
parameter    ap_ST_fsm_state25 = 26'd16777216;
parameter    ap_ST_fsm_state26 = 26'd33554432;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] outstream_TDATA;
output   outstream_TVALID;
input   outstream_TREADY;
input  [31:0] instream_TDATA;
input   instream_TVALID;
output   instream_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg outstream_TVALID;
reg instream_TREADY;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    outstream_TDATA_blk_n;
wire    ap_CS_fsm_state26;
reg    instream_TDATA_blk_n;
reg   [31:0] p_Val2_s_reg_833;
reg   [0:0] p_Result_9_reg_839;
wire   [31:0] tmp_V_fu_169_p2;
reg   [31:0] tmp_V_reg_845;
wire   [31:0] angle_fu_444_p3;
reg   [31:0] angle_reg_850;
wire    ap_CS_fsm_state2;
wire   [31:0] grp_fu_150_p2;
reg   [31:0] dc_reg_856;
wire    ap_CS_fsm_state11;
wire   [31:0] result_V_fu_583_p3;
reg   [31:0] result_V_reg_861;
wire    ap_CS_fsm_state12;
wire   [31:0] grp_fu_155_p1;
reg   [31:0] conv1_reg_866;
wire    ap_CS_fsm_state16;
wire   [31:0] grp_fu_145_p2;
reg   [31:0] quotient2_reg_871;
wire    ap_CS_fsm_state19;
wire   [31:0] grp_fu_141_p2;
reg   [31:0] reminder_reg_876;
wire    ap_CS_fsm_state23;
reg   [0:0] p_Result_14_reg_882;
wire    ap_CS_fsm_state25;
reg   [10:0] exp_tmp_reg_887;
wire   [51:0] trunc_ln554_fu_617_p1;
reg   [51:0] trunc_ln554_reg_892;
wire   [0:0] icmp_ln560_fu_621_p2;
reg   [0:0] icmp_ln560_reg_897;
reg    ap_block_state1;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state24;
wire   [31:0] tmp_V_2_fu_180_p3;
reg   [31:0] p_Result_10_fu_185_p4;
reg   [31:0] l_fu_195_p3;
wire   [31:0] sub_ln1099_fu_203_p2;
wire   [31:0] lsb_index_fu_209_p2;
wire   [30:0] tmp_fu_215_p4;
wire   [4:0] trunc_ln1102_fu_231_p1;
wire   [4:0] sub_ln1102_fu_235_p2;
wire   [31:0] zext_ln1102_fu_241_p1;
wire   [31:0] lshr_ln1102_fu_245_p2;
wire   [31:0] p_Result_s_fu_251_p2;
wire   [0:0] icmp_ln1101_fu_225_p2;
wire   [0:0] icmp_ln1102_fu_257_p2;
wire   [0:0] tmp_1_fu_269_p3;
wire   [0:0] p_Result_1_fu_283_p3;
wire   [0:0] xor_ln1104_fu_277_p2;
wire   [0:0] and_ln1104_fu_291_p2;
wire   [0:0] a_fu_263_p2;
wire   [0:0] or_ln1104_fu_297_p2;
wire   [31:0] add_ln1113_fu_321_p2;
wire   [63:0] zext_ln1112_fu_311_p1;
wire   [63:0] zext_ln1113_fu_327_p1;
wire   [31:0] sub_ln1114_fu_337_p2;
wire   [63:0] zext_ln1114_fu_343_p1;
wire   [0:0] icmp_ln1113_fu_315_p2;
wire   [63:0] lshr_ln1113_fu_331_p2;
wire   [63:0] shl_ln1114_fu_347_p2;
wire   [1:0] or_ln_fu_303_p3;
wire   [63:0] m_2_fu_353_p3;
wire   [63:0] zext_ln1116_fu_361_p1;
wire   [63:0] m_3_fu_365_p2;
wire   [62:0] m_4_fu_371_p4;
wire   [0:0] p_Result_2_fu_385_p3;
wire   [7:0] trunc_ln1098_fu_401_p1;
wire   [7:0] sub_ln1119_fu_405_p2;
wire   [7:0] select_ln1098_fu_393_p3;
wire   [7:0] add_ln1124_fu_411_p2;
wire   [63:0] zext_ln1117_fu_381_p1;
wire   [8:0] tmp_2_fu_417_p3;
wire   [63:0] p_Result_11_fu_424_p5;
wire   [31:0] LD_fu_436_p1;
wire   [0:0] icmp_ln1090_fu_175_p2;
wire   [31:0] bitcast_ln766_fu_440_p1;
wire   [31:0] data_V_fu_452_p1;
wire   [22:0] p_Result_13_fu_473_p1;
wire   [24:0] mantissa_fu_477_p4;
wire   [7:0] xs_exp_V_fu_463_p4;
wire   [8:0] zext_ln346_fu_491_p1;
wire   [8:0] add_ln346_fu_495_p2;
wire   [7:0] sub_ln1512_fu_509_p2;
wire   [0:0] isNeg_fu_501_p3;
wire  signed [8:0] sext_ln1512_fu_515_p1;
wire   [8:0] ush_fu_519_p3;
wire  signed [31:0] sext_ln1488_fu_527_p1;
wire   [78:0] zext_ln15_fu_487_p1;
wire   [78:0] zext_ln1488_fu_531_p1;
wire   [78:0] r_V_fu_535_p2;
wire   [0:0] tmp_8_fu_547_p3;
wire   [78:0] r_V_1_fu_541_p2;
wire   [31:0] zext_ln818_fu_555_p1;
wire   [31:0] tmp_4_fu_559_p4;
wire   [31:0] val_fu_569_p3;
wire   [0:0] p_Result_12_fu_455_p3;
wire   [31:0] result_V_2_fu_577_p2;
wire   [63:0] grp_fu_158_p1;
wire   [63:0] ireg_fu_591_p1;
wire   [62:0] trunc_ln544_fu_595_p1;
wire   [52:0] p_Result_15_fu_630_p3;
wire   [53:0] zext_ln558_fu_637_p1;
wire   [53:0] man_V_1_fu_641_p2;
wire   [11:0] zext_ln455_fu_627_p1;
wire   [11:0] F2_fu_654_p2;
wire   [0:0] icmp_ln570_fu_660_p2;
wire   [11:0] add_ln570_fu_666_p2;
wire   [11:0] sub_ln570_fu_672_p2;
wire  signed [11:0] sh_amt_fu_678_p3;
wire   [53:0] man_V_2_fu_647_p3;
wire  signed [31:0] sext_ln570_fu_686_p1;
wire   [53:0] zext_ln575_fu_706_p1;
wire   [53:0] ashr_ln575_fu_710_p2;
wire   [31:0] bitcast_ln724_fu_720_p1;
wire   [0:0] tmp_10_fu_723_p3;
wire   [0:0] icmp_ln574_fu_700_p2;
wire   [15:0] trunc_ln575_fu_716_p1;
wire   [15:0] select_ln577_fu_731_p3;
wire   [7:0] tmp_11_fu_747_p4;
wire   [15:0] trunc_ln572_fu_696_p1;
wire   [15:0] sext_ln570cast_fu_763_p1;
wire   [0:0] icmp_ln592_fu_757_p2;
wire   [15:0] shl_ln593_fu_767_p2;
wire   [0:0] icmp_ln571_fu_690_p2;
wire   [0:0] xor_ln560_fu_781_p2;
wire   [0:0] and_ln571_fu_786_p2;
wire   [15:0] select_ln592_fu_773_p3;
wire   [0:0] or_ln571_fu_800_p2;
wire   [0:0] xor_ln571_fu_805_p2;
wire   [0:0] and_ln570_fu_811_p2;
wire   [15:0] select_ln574_fu_739_p3;
wire   [15:0] select_ln571_fu_792_p3;
wire   [15:0] select_ln570_fu_817_p3;
reg   [25:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
reg    ap_ST_fsm_state26_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'd1;
end

phase_optimizer_cordic_fsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_4_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(angle_reg_850),
    .din1(quotient2_reg_871),
    .ce(1'b1),
    .dout(grp_fu_141_p2)
);

phase_optimizer_cordic_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(conv1_reg_866),
    .din1(32'd1086918619),
    .ce(1'b1),
    .dout(grp_fu_145_p2)
);

phase_optimizer_cordic_fdiv_32ns_32ns_32_9_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_9_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(angle_reg_850),
    .din1(32'd1086918619),
    .ce(1'b1),
    .dout(grp_fu_150_p2)
);

phase_optimizer_cordic_sitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_4_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(result_V_reg_861),
    .ce(1'b1),
    .dout(grp_fu_155_p1)
);

phase_optimizer_cordic_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reminder_reg_876),
    .ce(1'b1),
    .dout(grp_fu_158_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        angle_reg_850 <= angle_fu_444_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv1_reg_866 <= grp_fu_155_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        dc_reg_856 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        exp_tmp_reg_887 <= {{ireg_fu_591_p1[62:52]}};
        icmp_ln560_reg_897 <= icmp_ln560_fu_621_p2;
        p_Result_14_reg_882 <= ireg_fu_591_p1[32'd63];
        trunc_ln554_reg_892 <= trunc_ln554_fu_617_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        p_Result_9_reg_839 <= instream_TDATA[32'd31];
        p_Val2_s_reg_833 <= instream_TDATA;
        tmp_V_reg_845 <= tmp_V_fu_169_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        quotient2_reg_871 <= grp_fu_145_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        reminder_reg_876 <= grp_fu_141_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        result_V_reg_861 <= result_V_fu_583_p3;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((instream_TVALID == 1'b0) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

always @ (*) begin
    if ((outstream_TREADY == 1'b0)) begin
        ap_ST_fsm_state26_blk = 1'b1;
    end else begin
        ap_ST_fsm_state26_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((outstream_TREADY == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((outstream_TREADY == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        instream_TDATA_blk_n = instream_TVALID;
    end else begin
        instream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((instream_TVALID == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        instream_TREADY = 1'b1;
    end else begin
        instream_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        outstream_TDATA_blk_n = outstream_TREADY;
    end else begin
        outstream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((outstream_TREADY == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
        outstream_TVALID = 1'b1;
    end else begin
        outstream_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((instream_TVALID == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((outstream_TREADY == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_654_p2 = (12'd1075 - zext_ln455_fu_627_p1);

assign LD_fu_436_p1 = p_Result_11_fu_424_p5[31:0];

assign a_fu_263_p2 = (icmp_ln1102_fu_257_p2 & icmp_ln1101_fu_225_p2);

assign add_ln1113_fu_321_p2 = ($signed(sub_ln1099_fu_203_p2) + $signed(32'd4294967271));

assign add_ln1124_fu_411_p2 = (sub_ln1119_fu_405_p2 + select_ln1098_fu_393_p3);

assign add_ln346_fu_495_p2 = ($signed(zext_ln346_fu_491_p1) + $signed(9'd385));

assign add_ln570_fu_666_p2 = ($signed(F2_fu_654_p2) + $signed(12'd4083));

assign and_ln1104_fu_291_p2 = (xor_ln1104_fu_277_p2 & p_Result_1_fu_283_p3);

assign and_ln570_fu_811_p2 = (xor_ln571_fu_805_p2 & icmp_ln570_fu_660_p2);

assign and_ln571_fu_786_p2 = (xor_ln560_fu_781_p2 & icmp_ln571_fu_690_p2);

assign angle_fu_444_p3 = ((icmp_ln1090_fu_175_p2[0:0] == 1'b1) ? 32'd0 : bitcast_ln766_fu_440_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((instream_TVALID == 1'b0) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln575_fu_710_p2 = $signed(man_V_2_fu_647_p3) >>> zext_ln575_fu_706_p1;

assign bitcast_ln724_fu_720_p1 = reminder_reg_876;

assign bitcast_ln766_fu_440_p1 = LD_fu_436_p1;

assign data_V_fu_452_p1 = dc_reg_856;

assign icmp_ln1090_fu_175_p2 = ((p_Val2_s_reg_833 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1101_fu_225_p2 = (($signed(tmp_fu_215_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1102_fu_257_p2 = ((p_Result_s_fu_251_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1113_fu_315_p2 = (($signed(lsb_index_fu_209_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln560_fu_621_p2 = ((trunc_ln544_fu_595_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln570_fu_660_p2 = (($signed(F2_fu_654_p2) > $signed(12'd13)) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_690_p2 = ((F2_fu_654_p2 == 12'd13) ? 1'b1 : 1'b0);

assign icmp_ln574_fu_700_p2 = ((sh_amt_fu_678_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln592_fu_757_p2 = ((tmp_11_fu_747_p4 == 8'd0) ? 1'b1 : 1'b0);

assign ireg_fu_591_p1 = grp_fu_158_p1;

assign isNeg_fu_501_p3 = add_ln346_fu_495_p2[32'd8];


always @ (p_Result_10_fu_185_p4) begin
    if (p_Result_10_fu_185_p4[0] == 1'b1) begin
        l_fu_195_p3 = 32'd0;
    end else if (p_Result_10_fu_185_p4[1] == 1'b1) begin
        l_fu_195_p3 = 32'd1;
    end else if (p_Result_10_fu_185_p4[2] == 1'b1) begin
        l_fu_195_p3 = 32'd2;
    end else if (p_Result_10_fu_185_p4[3] == 1'b1) begin
        l_fu_195_p3 = 32'd3;
    end else if (p_Result_10_fu_185_p4[4] == 1'b1) begin
        l_fu_195_p3 = 32'd4;
    end else if (p_Result_10_fu_185_p4[5] == 1'b1) begin
        l_fu_195_p3 = 32'd5;
    end else if (p_Result_10_fu_185_p4[6] == 1'b1) begin
        l_fu_195_p3 = 32'd6;
    end else if (p_Result_10_fu_185_p4[7] == 1'b1) begin
        l_fu_195_p3 = 32'd7;
    end else if (p_Result_10_fu_185_p4[8] == 1'b1) begin
        l_fu_195_p3 = 32'd8;
    end else if (p_Result_10_fu_185_p4[9] == 1'b1) begin
        l_fu_195_p3 = 32'd9;
    end else if (p_Result_10_fu_185_p4[10] == 1'b1) begin
        l_fu_195_p3 = 32'd10;
    end else if (p_Result_10_fu_185_p4[11] == 1'b1) begin
        l_fu_195_p3 = 32'd11;
    end else if (p_Result_10_fu_185_p4[12] == 1'b1) begin
        l_fu_195_p3 = 32'd12;
    end else if (p_Result_10_fu_185_p4[13] == 1'b1) begin
        l_fu_195_p3 = 32'd13;
    end else if (p_Result_10_fu_185_p4[14] == 1'b1) begin
        l_fu_195_p3 = 32'd14;
    end else if (p_Result_10_fu_185_p4[15] == 1'b1) begin
        l_fu_195_p3 = 32'd15;
    end else if (p_Result_10_fu_185_p4[16] == 1'b1) begin
        l_fu_195_p3 = 32'd16;
    end else if (p_Result_10_fu_185_p4[17] == 1'b1) begin
        l_fu_195_p3 = 32'd17;
    end else if (p_Result_10_fu_185_p4[18] == 1'b1) begin
        l_fu_195_p3 = 32'd18;
    end else if (p_Result_10_fu_185_p4[19] == 1'b1) begin
        l_fu_195_p3 = 32'd19;
    end else if (p_Result_10_fu_185_p4[20] == 1'b1) begin
        l_fu_195_p3 = 32'd20;
    end else if (p_Result_10_fu_185_p4[21] == 1'b1) begin
        l_fu_195_p3 = 32'd21;
    end else if (p_Result_10_fu_185_p4[22] == 1'b1) begin
        l_fu_195_p3 = 32'd22;
    end else if (p_Result_10_fu_185_p4[23] == 1'b1) begin
        l_fu_195_p3 = 32'd23;
    end else if (p_Result_10_fu_185_p4[24] == 1'b1) begin
        l_fu_195_p3 = 32'd24;
    end else if (p_Result_10_fu_185_p4[25] == 1'b1) begin
        l_fu_195_p3 = 32'd25;
    end else if (p_Result_10_fu_185_p4[26] == 1'b1) begin
        l_fu_195_p3 = 32'd26;
    end else if (p_Result_10_fu_185_p4[27] == 1'b1) begin
        l_fu_195_p3 = 32'd27;
    end else if (p_Result_10_fu_185_p4[28] == 1'b1) begin
        l_fu_195_p3 = 32'd28;
    end else if (p_Result_10_fu_185_p4[29] == 1'b1) begin
        l_fu_195_p3 = 32'd29;
    end else if (p_Result_10_fu_185_p4[30] == 1'b1) begin
        l_fu_195_p3 = 32'd30;
    end else if (p_Result_10_fu_185_p4[31] == 1'b1) begin
        l_fu_195_p3 = 32'd31;
    end else begin
        l_fu_195_p3 = 32'd32;
    end
end

assign lsb_index_fu_209_p2 = ($signed(sub_ln1099_fu_203_p2) + $signed(32'd4294967272));

assign lshr_ln1102_fu_245_p2 = 32'd4294967295 >> zext_ln1102_fu_241_p1;

assign lshr_ln1113_fu_331_p2 = zext_ln1112_fu_311_p1 >> zext_ln1113_fu_327_p1;

assign m_2_fu_353_p3 = ((icmp_ln1113_fu_315_p2[0:0] == 1'b1) ? lshr_ln1113_fu_331_p2 : shl_ln1114_fu_347_p2);

assign m_3_fu_365_p2 = (m_2_fu_353_p3 + zext_ln1116_fu_361_p1);

assign m_4_fu_371_p4 = {{m_3_fu_365_p2[63:1]}};

assign man_V_1_fu_641_p2 = (54'd0 - zext_ln558_fu_637_p1);

assign man_V_2_fu_647_p3 = ((p_Result_14_reg_882[0:0] == 1'b1) ? man_V_1_fu_641_p2 : zext_ln558_fu_637_p1);

assign mantissa_fu_477_p4 = {{{{1'd1}, {p_Result_13_fu_473_p1}}}, {1'd0}};

assign or_ln1104_fu_297_p2 = (and_ln1104_fu_291_p2 | a_fu_263_p2);

assign or_ln571_fu_800_p2 = (icmp_ln571_fu_690_p2 | icmp_ln560_reg_897);

assign or_ln_fu_303_p3 = {{1'd0}, {or_ln1104_fu_297_p2}};

assign outstream_TDATA = ((icmp_ln560_reg_897[0:0] == 1'b1) ? 16'd0 : select_ln570_fu_817_p3);

integer ap_tvar_int_0;

always @ (tmp_V_2_fu_180_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_10_fu_185_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_10_fu_185_p4[ap_tvar_int_0] = tmp_V_2_fu_180_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_11_fu_424_p5 = {{zext_ln1117_fu_381_p1[63:32]}, {tmp_2_fu_417_p3}, {zext_ln1117_fu_381_p1[22:0]}};

assign p_Result_12_fu_455_p3 = data_V_fu_452_p1[32'd31];

assign p_Result_13_fu_473_p1 = data_V_fu_452_p1[22:0];

assign p_Result_15_fu_630_p3 = {{1'd1}, {trunc_ln554_reg_892}};

assign p_Result_1_fu_283_p3 = tmp_V_2_fu_180_p3[lsb_index_fu_209_p2];

assign p_Result_2_fu_385_p3 = m_3_fu_365_p2[32'd25];

assign p_Result_s_fu_251_p2 = (tmp_V_2_fu_180_p3 & lshr_ln1102_fu_245_p2);

assign r_V_1_fu_541_p2 = zext_ln15_fu_487_p1 << zext_ln1488_fu_531_p1;

assign r_V_fu_535_p2 = zext_ln15_fu_487_p1 >> zext_ln1488_fu_531_p1;

assign result_V_2_fu_577_p2 = (32'd0 - val_fu_569_p3);

assign result_V_fu_583_p3 = ((p_Result_12_fu_455_p3[0:0] == 1'b1) ? result_V_2_fu_577_p2 : val_fu_569_p3);

assign select_ln1098_fu_393_p3 = ((p_Result_2_fu_385_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln570_fu_817_p3 = ((and_ln570_fu_811_p2[0:0] == 1'b1) ? select_ln574_fu_739_p3 : select_ln571_fu_792_p3);

assign select_ln571_fu_792_p3 = ((and_ln571_fu_786_p2[0:0] == 1'b1) ? trunc_ln572_fu_696_p1 : select_ln592_fu_773_p3);

assign select_ln574_fu_739_p3 = ((icmp_ln574_fu_700_p2[0:0] == 1'b1) ? trunc_ln575_fu_716_p1 : select_ln577_fu_731_p3);

assign select_ln577_fu_731_p3 = ((tmp_10_fu_723_p3[0:0] == 1'b1) ? 16'd65535 : 16'd0);

assign select_ln592_fu_773_p3 = ((icmp_ln592_fu_757_p2[0:0] == 1'b1) ? shl_ln593_fu_767_p2 : 16'd0);

assign sext_ln1488_fu_527_p1 = $signed(ush_fu_519_p3);

assign sext_ln1512_fu_515_p1 = $signed(sub_ln1512_fu_509_p2);

assign sext_ln570_fu_686_p1 = sh_amt_fu_678_p3;

assign sext_ln570cast_fu_763_p1 = sext_ln570_fu_686_p1[15:0];

assign sh_amt_fu_678_p3 = ((icmp_ln570_fu_660_p2[0:0] == 1'b1) ? add_ln570_fu_666_p2 : sub_ln570_fu_672_p2);

assign shl_ln1114_fu_347_p2 = zext_ln1112_fu_311_p1 << zext_ln1114_fu_343_p1;

assign shl_ln593_fu_767_p2 = trunc_ln572_fu_696_p1 << sext_ln570cast_fu_763_p1;

assign sub_ln1099_fu_203_p2 = (32'd32 - l_fu_195_p3);

assign sub_ln1102_fu_235_p2 = ($signed(5'd25) - $signed(trunc_ln1102_fu_231_p1));

assign sub_ln1114_fu_337_p2 = (32'd25 - sub_ln1099_fu_203_p2);

assign sub_ln1119_fu_405_p2 = (8'd16 - trunc_ln1098_fu_401_p1);

assign sub_ln1512_fu_509_p2 = (8'd127 - xs_exp_V_fu_463_p4);

assign sub_ln570_fu_672_p2 = (12'd13 - F2_fu_654_p2);

assign tmp_10_fu_723_p3 = bitcast_ln724_fu_720_p1[32'd31];

assign tmp_11_fu_747_p4 = {{sh_amt_fu_678_p3[11:4]}};

assign tmp_1_fu_269_p3 = lsb_index_fu_209_p2[32'd31];

assign tmp_2_fu_417_p3 = {{p_Result_9_reg_839}, {add_ln1124_fu_411_p2}};

assign tmp_4_fu_559_p4 = {{r_V_1_fu_541_p2[55:24]}};

assign tmp_8_fu_547_p3 = r_V_fu_535_p2[32'd24];

assign tmp_V_2_fu_180_p3 = ((p_Result_9_reg_839[0:0] == 1'b1) ? tmp_V_reg_845 : p_Val2_s_reg_833);

assign tmp_V_fu_169_p2 = (32'd0 - instream_TDATA);

assign tmp_fu_215_p4 = {{lsb_index_fu_209_p2[31:1]}};

assign trunc_ln1098_fu_401_p1 = l_fu_195_p3[7:0];

assign trunc_ln1102_fu_231_p1 = sub_ln1099_fu_203_p2[4:0];

assign trunc_ln544_fu_595_p1 = ireg_fu_591_p1[62:0];

assign trunc_ln554_fu_617_p1 = ireg_fu_591_p1[51:0];

assign trunc_ln572_fu_696_p1 = man_V_2_fu_647_p3[15:0];

assign trunc_ln575_fu_716_p1 = ashr_ln575_fu_710_p2[15:0];

assign ush_fu_519_p3 = ((isNeg_fu_501_p3[0:0] == 1'b1) ? sext_ln1512_fu_515_p1 : add_ln346_fu_495_p2);

assign val_fu_569_p3 = ((isNeg_fu_501_p3[0:0] == 1'b1) ? zext_ln818_fu_555_p1 : tmp_4_fu_559_p4);

assign xor_ln1104_fu_277_p2 = (tmp_1_fu_269_p3 ^ 1'd1);

assign xor_ln560_fu_781_p2 = (icmp_ln560_reg_897 ^ 1'd1);

assign xor_ln571_fu_805_p2 = (or_ln571_fu_800_p2 ^ 1'd1);

assign xs_exp_V_fu_463_p4 = {{data_V_fu_452_p1[30:23]}};

assign zext_ln1102_fu_241_p1 = sub_ln1102_fu_235_p2;

assign zext_ln1112_fu_311_p1 = tmp_V_2_fu_180_p3;

assign zext_ln1113_fu_327_p1 = add_ln1113_fu_321_p2;

assign zext_ln1114_fu_343_p1 = sub_ln1114_fu_337_p2;

assign zext_ln1116_fu_361_p1 = or_ln_fu_303_p3;

assign zext_ln1117_fu_381_p1 = m_4_fu_371_p4;

assign zext_ln1488_fu_531_p1 = $unsigned(sext_ln1488_fu_527_p1);

assign zext_ln15_fu_487_p1 = mantissa_fu_477_p4;

assign zext_ln346_fu_491_p1 = xs_exp_V_fu_463_p4;

assign zext_ln455_fu_627_p1 = exp_tmp_reg_887;

assign zext_ln558_fu_637_p1 = p_Result_15_fu_630_p3;

assign zext_ln575_fu_706_p1 = $unsigned(sext_ln570_fu_686_p1);

assign zext_ln818_fu_555_p1 = tmp_8_fu_547_p3;


reg find_kernel_block = 0;
// synthesis translate_off
`include "phase_optimizer_cordic_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //phase_optimizer_cordic

